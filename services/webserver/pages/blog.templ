package pages

import (
	"personal-website/internal"
	"personal-website/services/webserver/layouts"
)

type Blog struct {
	Pages []string
}

templ (p Blog) View(posts []internal.Post) {
	@layouts.Base{
		Pages:       p.Pages,
		PageCurrent: "blog",
		Title:       "Ethan Thoma \\ Blog",
	}.View() {
		<article class="row-start-1 self-start border-2 col-[2/-2] bg-[#fff]">
			<h1 class="text-2xl font-extrabold tracking-tight leading-none border-b-2 px-xs-s py-3xs">Blogs</h1>
			<ol class="grid bg-lightblue gap-y-m grid-cols-[min-content_min-content_1fr] px-xs-s py-3xs">
				for i, post := range posts {
					@view_post(post, i == 0, i == len(posts)-1)
				}
			</ol>
		</article>
	}
}

templ view_post(post internal.Post, first, last bool) {
	<li class="grid relative col-span-3 grid-cols-subgrid">
		<div class="flex flex-col col-[1] py-2xs pe-3xs">
			<time>{ post.Date.Format("20060102") }</time>
			if !last {
				<div class="relative flex-1">
					<div class="border-e-2 [z-index:1] border-content/20 my-2xs h-[calc(100%_+_var(--spacing-m))] w-1/2 absolute inset-0"></div>
				</div>
			}
		</div>
		<span class="col-[2] px-3xs py-2xs">-</span>
		<a
			class="inline-flex items-center group col-[3] gap-x-2xs px-3xs py-2xs w-fit hover:text-blue hover:bg-lightblue"
			href={ templ.URL("/post/" + post.Slug) }
			hx-get={ "/post/" + post.Slug }
			hx-target="main"
			hx-select="main"
			hx-swap="outerHTML"
			hx-push-url={ "/post/" + post.Slug }
		>
			if first {
				<p class="text-xs font-extrabold rounded text-lightblue align-super px-2xs bg-orange after:content-[''] group-hover:bg-blue after:table after:mt-[calc((-0.10)*var(--text-xs)*var(--text-xs--line-height))]">New</p>
			}
			<h3 class="underline">{ post.Title }</h3>
		</a>
	</li>
}
